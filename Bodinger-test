//@version=5
indicator(shorttitle='MBB', title='Bollinger Bands with R/R and SL/TP', overlay=true)

// Input parameters
src = input(close)
length = input.int(34, minval=1)
mult = input.float(2.0, minval=0.001, maxval=50)

// Risk/Reward settings
riskRewardRatio = input.float(1.5, title='Risk/Reward Ratio (Medium Risk)', minval=1.0)
stopLossOffset = input.float(0.5, title='Stop Loss Offset (%)', minval=0.0) // Offset above the swing high

// Bollinger Bands calculation
basis = ta.sma(src, length)
dev = ta.stdev(src, length)
dev2 = mult * dev

upper1 = basis + dev
lower1 = basis - dev
upper2 = basis + dev2
lower2 = basis - dev2

colorBasis = src >= basis ? color.blue : color.orange

pBasis = plot(basis, linewidth=2, color=colorBasis)
pUpper1 = plot(upper1, color=color.new(color.blue, 0), style=plot.style_circles)
pUpper2 = plot(upper2, color=color.new(color.blue, 0))
pLower1 = plot(lower1, color=color.new(color.orange, 0), style=plot.style_circles)
pLower2 = plot(lower2, color=color.new(color.orange, 0))

fill(pBasis, pUpper2, color=color.new(color.blue, 80))
fill(pUpper1, pUpper2, color=color.new(color.blue, 80))
fill(pBasis, pLower2, color=color.new(color.orange, 80))
fill(pLower1, pLower2, color=color.new(color.orange, 80))

// Variables for entry and exit
var float entryPrice = na
var float stopLoss = na
var float takeProfit = na
var float recentSwingLow = na
var float recentSwingHigh = na

// Detect recent swing low and high
if (low < recentSwingLow or na(recentSwingLow))
    recentSwingLow := low

if (high > recentSwingHigh or na(recentSwingHigh))
    recentSwingHigh := high

// Buy Signal Logic
if (ta.crossover(src, lower1) and src[1] < lower1) // Price crosses back above lower1 after being below
    entryPrice := src
    stopLoss := recentSwingLow * (1 - stopLossOffset / 100) // Adjust stop loss below the recent swing low
    takeProfit := entryPrice + (entryPrice - stopLoss) * riskRewardRatio // Calculate take profit

// Sell Signal Logic
if (ta.crossunder(src, upper1) and src[1] > upper1) // Price crosses back below upper1 after being above
    entryPrice := src
    stopLoss := recentSwingHigh * (1 + stopLossOffset / 100) // Adjust stop loss above the recent swing high
    takeProfit := entryPrice - (stopLoss - entryPrice) * riskRewardRatio // Calculate take profit

// Reset conditions (optional)
if (ta.crossunder(src, lower1) or ta.crossover(src, upper1)) // Exit conditions
    entryPrice := na
    stopLoss := na
    takeProfit := na
    recentSwingLow := na
    recentSwingHigh := na

// Plot Stop Loss and Take Profit levels
plot(stopLoss, color=color.red, linewidth=1, title='Stop Loss')
plot(takeProfit, color=color.green, linewidth=1, title='Take Profit')

